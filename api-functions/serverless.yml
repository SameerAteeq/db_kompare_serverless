org: dbkompare
app: db-kompare
service: api-functions
configValidationMode: error

useDotenv: true

custom:
  lambdaInitialArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}
  databasesTableArn: arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:provider.environment.DATABASES_TABLE}
  metricesTableArn: arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:provider.environment.METRICES_TABLE}
  serverless-offline:
    httpPort: 4000

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  environment:
    DATABASES_TABLE: db-kompare-databases-${self:provider.stage}
    METRICES_TABLE: db-kompare-metrices-${self:provider.stage}
    STACK_API_KEY: ${env:STACK_API_KEY}
    GITHUB_TOKEN: ${env:GITHUB_TOKEN}
    GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}
    GOOGLE_CSE_ID: ${env:GOOGLE_CSE_ID}
    BING_API_KEY: ${env:BING_API_KEY}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
          Resource:
            - ${self:custom.databasesTableArn}/index/byStatus
            - ${self:custom.databasesTableArn} # Permission for databases table
            - ${self:custom.metricesTableArn} # Permission for metrices table
functions:
  createDatabase:
    handler: functions/databases/createDatabase.handler
    events:
      - http:
          path: /create-database
          method: post
  getallDatabases:
    handler: functions/databases/getAllDatabases.handler
    events:
      - http:
          path: /get-databases
          method: get
  getDatabasesByIds:
    handler: functions/databases/getDatabaseByIds.handler
    events:
      - http:
          path: /get-database-by-ids
          method: post
          cors: true
  addMetrices:
    handler: functions/metrices/addMetrices.handler
    timeout: 120
    events:
      - http:
          path: /add-metrices
          method: post
  # addBasicMetrices:
  #   handler: functions/metrices/addBasicMetrices.handler
  #   timeout: 120
  #   events:
  #     - schedule:
  #         rate: rate(5 minutes)
  getGithubMetrices:
    handler: functions/metrices/getGithubMetrices.handler
    timeout: 120
    events:
      - schedule:
          rate: rate(5 minutes)
